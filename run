#!/bin/sh -e

if [ -z $CI ]; then
    compose='docker compose'
else
    compose='docker compose -f compose.ci.yaml'
fi

frontend_run() {
    $compose run --rm frontend $*
}

backend_run() {
    $compose run --rm backend $*
}

e2e_run() {
    $compose build e2e
    $compose run --rm e2e $*
}

lint() {
    frontend_run npm run lint
    frontend_run npm run typecheck
    backend_run python -m flake8
    backend_run python -m mypy .
    e2e_run python -m flake8
}

format() {
    frontend_run npm run format
    backend_run python -m black --line-length 79 .
    e2e_run python -m black --line-length 79 .
}

unit_test() {
    backend_run python -m pytest
    frontend_run npm run test -- --run
}

e2e() {
    backend_run python manage.py flush --no-input
    backend_run python manage.py seed
    e2e_run python -m pytest $*
}

install_local_e2e() {
    python -m venv env
    . env/bin/activate
    python -m pip install -r e2e/requirements.txt
    playwright install
    deactivate
}

debug_e2e() {
    backend_run python manage.py flush --no-input
    backend_run python manage.py seed
    set -o allexport
    . ./.env
    set +o allexport
    . env/bin/activate
    cd e2e
    E2E_HOST=http://localhost:3000 PWDEBUG=1 python -m pytest $*
    deactivate
}

dev() {
    $compose up --build -d
}

preview() {
    $compose -f compose.prod.yaml up --build
}

if [ $# -eq 0 ]; then
    command=dev
else
    command=$1
    shift
fi

case $command in
    dev) dev ;; # Start the app in dev mode
    preview) preview ;; # Run a prod build
    restart) $compose down && dev ;; # Restart dev Docker containers
    lint) lint ;; # Check code for quality issues
    format) format ;; # Format source code
    test) unit_test ;; # Run unit tests
    migrate) backend_run python manage.py migrate ;; # Run database migrations
    pull) $compose pull && $compose pull e2e ;; # Pull Docker images
    e2e) e2e $* ;; # Run e2e specs
    build-e2e) $compose build e2e ;; # Build Docker image for e2e specs
    install-local-e2e) install_local_e2e ;; # Install e2e outside of Docker
    debug-e2e) debug_e2e $* ;; # Run local e2e with the Playwright Inspector
    stop) $compose down ;;
    rm) $compose down -v ;;
    *)
        echo "$0: Unrecognised command (see script for options): $command" >&2
        exit 1
        ;;
esac
